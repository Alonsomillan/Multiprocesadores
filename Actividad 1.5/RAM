//lecto escritura en RAM
#include <stdio.h>
#include <omp.h>
#include <math.h>
#define NUM_THREADS 6
int N = 10000000;

double h,t[0],w[0],ab;
FILE *fptr;
void iteracion(int N,FILE *x);

double w0=0.5,a=0,b=2;
int i;
int main()
{ omp_set_num_threads(NUM_THREADS);
const double startTime = omp_get_wtime();      
fptr=fopen("EulerRAM.txt","w");
printf("Numero de pasos:%d \n", N);
fprintf(fptr, "Datos que encuentra el metodo de Euler(variable ind.\t variable dep.\t numero de thread)\n");
    //empezamos pragma aqui
    //fprintf(fptr, "%f\t %f\n", a, w);
    #pragma omp parallel
{
        #pragma omp sections
    {
        #pragma omp section 
            (void)iteracion(10000000,fptr);
    }
}       
//terminamos prgrama aqui

    for(i=0;i<N;i++){
        fprintf(fptr, "%f\t %f\n", t[i], w[i]);
    }
    const double endTime = omp_get_wtime();
    printf("tomo (%lf) segundos\n",(endTime-startTime));
    fclose(fptr);
    return (0);
}

void iteracion(int N, FILE *x)
{   
    //double h,t[N],w[N],ab;
    h=(b-a)/N;
    w[0] = w0;
    t[0] = a;
    for(i=0;i<N;i++){
        t[i]=a+(h*i);
        w[i]=w[i-1]+h*(1+t[i-1]*t[i-1]-w[i-1]); //para elinciso 3 agregamos funcoines aqui
    }
}    
